package com.everis.equipouno.model;
// Generated 18/09/2019 12:21:43 PM by Hibernate Tools 5.2.12.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Calendario generated by hbm2java
 */
@Entity
@Table(name = "calendario", catalog = "escuela")
public class Calendario implements java.io.Serializable {

	private int id;
	private Curso curso;
	private Date inicio;
	private Date fin;
	@JsonIgnore
	private List<Inscripcion> inscripcions = new ArrayList<Inscripcion>(0);

	public Calendario() {
	}

	public Calendario(int id, Curso curso, Date inicio, Date fin) {
		this.id = id;
		this.curso = curso;
		this.inicio = inicio;
		this.fin = fin;
	}

	public Calendario(int id, Curso curso, Date inicio, Date fin, List<Inscripcion> inscripcions) {
		this.id = id;
		this.curso = curso;
		this.inicio = inicio;
		this.fin = fin;
		this.inscripcions = inscripcions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "curso_id", nullable = false)
	public Curso getCurso() {
		return this.curso;
	}

	public void setCurso(Curso curso) {
		this.curso = curso;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "inicio", nullable = false, length = 19)
	public Date getInicio() {
		return this.inicio;
	}

	public void setInicio(Date inicio) {
		this.inicio = inicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fin", nullable = false, length = 19)
	public Date getFin() {
		return this.fin;
	}

	public void setFin(Date fin) {
		this.fin = fin;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendario") //Leer service para entender LAZY
	public List<Inscripcion> getInscripcions() {
		return this.inscripcions;
	}

	public void setInscripcions(List<Inscripcion> inscripcions) {
		this.inscripcions = inscripcions;
	}

}
